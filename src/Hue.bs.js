// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function discoveredStation(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.string, json),
          /* internalipaddress */Json_decode.field("internalipaddress", Json_decode.string, json)
        ];
}

function discoveredStations(json) {
  return Json_decode.list(discoveredStation, json);
}

function baseStation(json) {
  return /* record */[
          /* name */Json_decode.field("name", Json_decode.string, json),
          /* datastoreversion */Json_decode.field("datastoreversion", Json_decode.string, json),
          /* swversion */Json_decode.field("swversion", Json_decode.string, json),
          /* apiversion */Json_decode.field("apiversion", Json_decode.string, json),
          /* mac */Json_decode.field("mac", Json_decode.string, json),
          /* bridgeid */Json_decode.field("swversion", Json_decode.string, json),
          /* factorynew */Json_decode.field("factorynew", Json_decode.bool, json),
          /* replacesbridgeid */Json_decode.field("replacesbridgeid", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), json),
          /* modelid */Json_decode.field("modelid", Json_decode.string, json),
          /* starterkitid */Json_decode.field("starterkitid", Json_decode.string, json)
        ];
}

var Decode = /* module */[
  /* discoveredStation */discoveredStation,
  /* discoveredStations */discoveredStations,
  /* baseStation */baseStation
];

function discover() {
  return fetch("https://discovery.meethue.com").then((function (prim) {
                  return prim.json();
                })).then((function (json) {
                return Promise.resolve(Json_decode.list(discoveredStation, json));
              }));
}

function getInfo(station) {
  return fetch("http://" + (station[/* internalipaddress */1] + "/api/config")).then((function (prim) {
                  return prim.json();
                })).then((function (json) {
                return Promise.resolve(baseStation(json));
              }));
}

exports.Decode = Decode;
exports.discover = discover;
exports.getInfo = getInfo;
/* No side effect */
