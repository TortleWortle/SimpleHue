// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Hue = require("./Hue.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("BaseStation");

function make(discoveredStation, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* StartLoading */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* status */1];
              switch (match) {
                case 0 : 
                case 1 : 
                    return "TODO not implemented yet";
                case 2 : 
                    var match$1 = self[/* state */1][/* station */0];
                    if (match$1 !== undefined) {
                      var station = match$1;
                      return React.createElement("div", undefined, React.createElement("div", undefined, "Name: " + station[/* name */0]), React.createElement("div", undefined, "ModelId: " + station[/* modelid */8]), React.createElement("button", {
                                      onClick: (function () {
                                          console.log("Connect");
                                          return /* () */0;
                                        })
                                    }, "Connect"));
                    } else {
                      return "This should never happen.";
                    }
                case 3 : 
                    return "Loading Station Info...";
                case 4 : 
                    return "Could not load station info.";
                
              }
            }),
          /* initialState */(function () {
              return /* record */[
                      /* station */undefined,
                      /* status : Loading */3
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  return /* Update */Block.__(0, [/* record */[
                              /* station */state[/* station */0],
                              /* status : Failed */4
                            ]]);
                } else {
                  return /* UpdateWithSideEffects */Block.__(2, [
                            /* record */[
                              /* station */state[/* station */0],
                              /* status : Loading */3
                            ],
                            (function (self) {
                                Hue.getInfo(discoveredStation).then((function (station) {
                                          return Promise.resolve(Curry._1(self[/* send */3], /* LoadingFinished */[station]));
                                        })).catch((function () {
                                        return Promise.resolve(Curry._1(self[/* send */3], /* LoadingError */1));
                                      }));
                                return /* () */0;
                              })
                          ]);
                }
              } else {
                var station = action[0];
                var status = station !== undefined ? /* Success */2 : /* Failed */4;
                return /* Update */Block.__(0, [/* record */[
                            /* station */station,
                            /* status */status
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
